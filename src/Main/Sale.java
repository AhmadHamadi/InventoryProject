/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;
import java.lang.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ruwan
 */
public class Sale extends javax.swing.JInternalFrame {

    /**
     * Creates new form Sale
     */
    Connection conn=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    String sqr;
    public static  String sino;
    public static String salecost;
    public  static  String saleincome;
    public  static  String test;
    
    public Sale() {
        initComponents();
        conn=DBConnect.connect();
        combolord();
        autosellId();
        lorddisable();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));        
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        selltable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtprice = new javax.swing.JTextField();
        txtavailable = new javax.swing.JTextField();
        txtstock = new javax.swing.JTextField();
        txtdescription = new javax.swing.JTextField();
        txtamount = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtitmnum = new javax.swing.JTextField();
        txtquntity = new javax.swing.JTextField();
        itemcombox = new javax.swing.JComboBox<>();
        btnvoid = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        btnadd = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        lbltotal = new javax.swing.JLabel();
        txtreno = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstreceive = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        txtinvoice = new javax.swing.JTextField();
        btnprosess = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lblcost = new javax.swing.JLabel();
        lbltotalcost = new javax.swing.JLabel();
        lblitemcost = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(880, 510));
        setPreferredSize(new java.awt.Dimension(880, 510));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel2.setLayout(null);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        selltable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        selltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Receive No", "Item Number", "Item Nmae", "Quantity", "Price", "Amount Due"
            }
        ));
        selltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selltableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(selltable);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 10, 800, 130);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(30, 80, 820, 150);

        jLabel7.setFont(new java.awt.Font("Sitka Text", 3, 18)); // NOI18N
        jLabel7.setText("Item Details");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(30, 240, 140, 20);

        jLabel8.setFont(new java.awt.Font("Sitka Text", 3, 16)); // NOI18N
        jLabel8.setText("Receive Number");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(40, 280, 130, 21);

        jLabel9.setFont(new java.awt.Font("Sitka Text", 3, 16)); // NOI18N
        jLabel9.setText("PRICE");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(270, 280, 60, 21);

        jLabel10.setFont(new java.awt.Font("Sitka Text", 3, 16)); // NOI18N
        jLabel10.setText("AVAILABILITY");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(140, 330, 120, 21);

        jLabel11.setFont(new java.awt.Font("Sitka Text", 3, 16)); // NOI18N
        jLabel11.setText("STOCKS");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(270, 330, 70, 21);

        jLabel12.setFont(new java.awt.Font("Sitka Text", 3, 16)); // NOI18N
        jLabel12.setText("DESCRIPTION");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(140, 400, 120, 21);

        jLabel13.setFont(new java.awt.Font("Sitka Text", 3, 16)); // NOI18N
        jLabel13.setText("AMOUNT");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(140, 440, 90, 21);

        txtprice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtprice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtprice.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpriceActionPerformed(evt);
            }
        });
        jPanel1.add(txtprice);
        txtprice.setBounds(270, 300, 120, 27);

        txtavailable.setEditable(false);
        txtavailable.setBackground(new java.awt.Color(255, 255, 255));
        txtavailable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtavailable.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtavailable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtavailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtavailableActionPerformed(evt);
            }
        });
        jPanel1.add(txtavailable);
        txtavailable.setBounds(170, 350, 120, 27);

        txtstock.setEditable(false);
        txtstock.setBackground(new java.awt.Color(255, 255, 255));
        txtstock.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtstock.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtstock.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtstock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtstockActionPerformed(evt);
            }
        });
        jPanel1.add(txtstock);
        txtstock.setBounds(270, 350, 120, 27);

        txtdescription.setEditable(false);
        txtdescription.setBackground(new java.awt.Color(255, 255, 255));
        txtdescription.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtdescription.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtdescription.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.add(txtdescription);
        txtdescription.setBounds(270, 390, 120, 30);

        txtamount.setEditable(false);
        txtamount.setBackground(new java.awt.Color(255, 255, 255));
        txtamount.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtamount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtamount.setText("00.00");
        txtamount.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtamount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtamountActionPerformed(evt);
            }
        });
        jPanel1.add(txtamount);
        txtamount.setBounds(270, 430, 120, 30);

        jLabel15.setFont(new java.awt.Font("Sitka Text", 3, 18)); // NOI18N
        jLabel15.setText("Item Manager");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(420, 240, 150, 20);

        jLabel19.setFont(new java.awt.Font("Sitka Text", 3, 16)); // NOI18N
        jLabel19.setText("Item Number");
        jPanel1.add(jLabel19);
        jLabel19.setBounds(430, 290, 110, 21);

        jLabel20.setFont(new java.awt.Font("Sitka Text", 3, 16)); // NOI18N
        jLabel20.setText("Quantity");
        jPanel1.add(jLabel20);
        jLabel20.setBounds(670, 290, 80, 21);

        txtitmnum.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtitmnum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtitmnum.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtitmnum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtitmnumActionPerformed(evt);
            }
        });
        txtitmnum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtitmnumKeyReleased(evt);
            }
        });
        jPanel1.add(txtitmnum);
        txtitmnum.setBounds(540, 280, 120, 27);

        txtquntity.setEditable(false);
        txtquntity.setBackground(new java.awt.Color(255, 255, 255));
        txtquntity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtquntity.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtquntity.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtquntity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtquntityActionPerformed(evt);
            }
        });
        txtquntity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtquntityKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtquntityKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtquntityKeyTyped(evt);
            }
        });
        jPanel1.add(txtquntity);
        txtquntity.setBounds(750, 280, 80, 27);

        itemcombox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        itemcombox.setMaximumRowCount(20);
        itemcombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Item Name" }));
        itemcombox.setAutoscrolls(true);
        itemcombox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        itemcombox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                itemcomboxPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        itemcombox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemcomboxActionPerformed(evt);
            }
        });
        jPanel1.add(itemcombox);
        itemcombox.setBounds(430, 320, 210, 30);

        btnvoid.setBackground(new java.awt.Color(193, 222, 136));
        btnvoid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnvoidMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8_Multiply_25px.png"))); // NOI18N
        jLabel6.setText("Void");

        javax.swing.GroupLayout btnvoidLayout = new javax.swing.GroupLayout(btnvoid);
        btnvoid.setLayout(btnvoidLayout);
        btnvoidLayout.setHorizontalGroup(
            btnvoidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnvoidLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        btnvoidLayout.setVerticalGroup(
            btnvoidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnvoidLayout.createSequentialGroup()
                .addGap(0, 5, Short.MAX_VALUE)
                .addComponent(jLabel6))
        );

        jPanel1.add(btnvoid);
        btnvoid.setBounds(750, 330, 90, 30);

        btnadd.setBackground(new java.awt.Color(193, 222, 136));
        btnadd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnaddMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add-image-24.png"))); // NOI18N
        jLabel3.setText("Add");

        javax.swing.GroupLayout btnaddLayout = new javax.swing.GroupLayout(btnadd);
        btnadd.setLayout(btnaddLayout);
        btnaddLayout.setHorizontalGroup(
            btnaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 90, Short.MAX_VALUE)
            .addGroup(btnaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(btnaddLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        btnaddLayout.setVerticalGroup(
            btnaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
            .addGroup(btnaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(btnaddLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel1.add(btnadd);
        btnadd.setBounds(650, 330, 90, 30);

        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel16);
        jLabel16.setBounds(420, 270, 430, 100);

        jLabel21.setFont(new java.awt.Font("Sitka Text", 3, 18)); // NOI18N
        jLabel21.setText("AMOUNT DUE");
        jPanel1.add(jLabel21);
        jLabel21.setBounds(430, 380, 160, 20);

        lbltotal.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        lbltotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltotal.setText("0.00");
        lbltotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(lbltotal);
        lbltotal.setBounds(420, 410, 270, 60);

        txtreno.setEditable(false);
        txtreno.setBackground(new java.awt.Color(255, 255, 255));
        txtreno.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtreno.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtreno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrenoActionPerformed(evt);
            }
        });
        jPanel1.add(txtreno);
        txtreno.setBounds(40, 300, 90, 30);

        lstreceive.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lstreceive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstreceiveMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lstreceive);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(40, 330, 90, 130);

        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jPanel1.add(jLabel5);
        jLabel5.setBounds(30, 270, 380, 200);

        txtinvoice.setEditable(false);
        txtinvoice.setBackground(new java.awt.Color(255, 255, 255));
        txtinvoice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtinvoice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtinvoice.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.add(txtinvoice);
        txtinvoice.setBounds(710, 390, 120, 30);

        btnprosess.setBackground(new java.awt.Color(193, 222, 136));
        btnprosess.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnprosessMouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/rotate-24.png"))); // NOI18N
        jLabel14.setText("Prosess");
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout btnprosessLayout = new javax.swing.GroupLayout(btnprosess);
        btnprosess.setLayout(btnprosessLayout);
        btnprosessLayout.setHorizontalGroup(
            btnprosessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 90, Short.MAX_VALUE)
            .addGroup(btnprosessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(btnprosessLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel14)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        btnprosessLayout.setVerticalGroup(
            btnprosessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
            .addGroup(btnprosessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(btnprosessLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel14)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel1.add(btnprosess);
        btnprosess.setBounds(730, 430, 90, 30);

        jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel18);
        jLabel18.setBounds(700, 380, 150, 90);

        lblcost.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblcost);
        lblcost.setBounds(400, 20, 0, 0);

        lbltotalcost.setForeground(new java.awt.Color(255, 255, 255));
        lbltotalcost.setText("00.00");
        jPanel1.add(lbltotalcost);
        lbltotalcost.setBounds(490, 0, 27, 16);

        lblitemcost.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(lblitemcost);
        lblitemcost.setBounds(750, 20, 0, 0);

        jPanel3.setBackground(new java.awt.Color(193, 222, 136));

        jLabel1.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Item Order Menu");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(570, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(30, 20, 820, 50);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combolord()
    {
            String sq="SELECT DISTINCT receivestock.item_name from receivestock inner join stock where receivestock.item_number=stock.item_number";
            try {
             pst=conn.prepareStatement(sq);
             rs=pst.executeQuery();
             while(rs.next())
             {
             String name=rs.getString("item_name");
             itemcombox.addItem(name);
             }
         } catch (SQLException ex) {
             Logger.getLogger(Sale.class.getName()).log(Level.SEVERE, null, ex);
         }
    }
        
    private void txtavailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtavailableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtavailableActionPerformed
    
    private void lorddisable()
    {
        btnprosess.setEnabled(false);
        txtprice.setEnabled(false);
        btnadd.setEnabled(false);
        btnvoid.setEnabled(false);
        txtquntity.setEnabled(false);
    }
      
    private void saleVoid()
    {
        DefaultTableModel tmodel=(DefaultTableModel)selltable.getModel();
        int selectrowindex=selltable.getSelectedRow();
        String sin=(tmodel.getValueAt(selectrowindex, 0).toString());
        String reno=(tmodel.getValueAt(selectrowindex, 1).toString());
        int x=JOptionPane.showConfirmDialog(rootPane, "Do you realy want to void");
        if(x==0)
        {
        try {
                String sql="DELETE FROM sells where receive_no='"+reno+"' and sin='"+sin+"'";
                pst=conn.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(rootPane, "successfully Void");
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,e);
            }
    }
    }
    
    private void txtitmnumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtitmnumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtitmnumActionPerformed

    private  void clear()
    {
        txtitmnum.setText("");
        txtquntity.setText("");
        txtprice.setText("");
        txtavailable.setText("");
        txtstock.setText("");
        txtdescription.setText("");
        txtamount.setText("");
        txtreno.setText("");
        DefaultListModel dl=new DefaultListModel();
        dl.addElement("");
        lstreceive.setModel(dl);
    }
    
     private  void cleartest()
    {
        txtquntity.setText("");
        txtprice.setText("");
        txtavailable.setText("");
        txtstock.setText("");
        txtdescription.setText("");
        txtamount.setText("");
        txtreno.setText("");
        DefaultListModel dl=new DefaultListModel();
        dl.addElement("");
        lstreceive.setModel(dl);        
    }
    
    private void itemLordToReNo()
    {
        if(txtreno.getText().length()>0)
        {
        try {
            String comrec=txtreno.getText();
            String sq="SELECT receivestock.buying_price, receivestock.selling_price,stock.quentity, receivestock.description from receivestock join stock on receivestock.receive_no=stock.receive_no where receivestock.receive_no='"+comrec+"' and stock.receive_no='"+comrec+"'";
            
        
             pst=conn.prepareStatement(sq);
             rs=pst.executeQuery();
             while(rs.next())
             {
             String cost=rs.getString("buying_price");
             String pri=rs.getString("selling_price");
             String sto=rs.getString("quentity");
             String des=rs.getString("description");
             
             
             lblcost.setText(cost);
             txtprice.setText(pri);
             txtstock.setText(sto);
             txtdescription.setText(des);
             Double x=Double.parseDouble(sto);
             if(x>0)
             {
                 txtavailable.setText("Available");
             }
             else
             {
                 txtavailable.setText("Not available");
             }
             }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane,e);  
        }
        txtprice.setEnabled(true);
        txtquntity.setEnabled(true); 
        }
    }
        
    
    private void txtamountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtamountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtamountActionPerformed

    private void detailsLord()
    {
    try {
            String comrec=lstreceive.getSelectedValue().toString();
            String sq="SELECT receivestock.buying_price, receivestock.selling_price,stock.quentity, receivestock.description from receivestock join stock on receivestock.receive_no=stock.receive_no where receivestock.receive_no='"+comrec+"' and stock.receive_no='"+comrec+"'";
             pst=conn.prepareStatement(sq);
             rs=pst.executeQuery();
             while(rs.next())
             {
             String cost=rs.getString("buying_price");
             String pri=rs.getString("selling_price");
             String sto=rs.getString("quentity");
             String des=rs.getString("description");
             lblcost.setText(cost);
             txtprice.setText(pri);
             txtstock.setText(sto);
             txtdescription.setText(des);
             Double x=Double.parseDouble(sto);
             if(x>0)
             {
                 txtavailable.setText("Available");
             }
             else
             {
                 txtavailable.setText("Not available");
             }
             }            
    } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane,e);  
        }
        txtprice.setEnabled(true);
        txtquntity.setEnabled(true);    
    }
    
    private void sellvoidUpdate()     //add sele reduce
    {
        try {
            DefaultTableModel tmodel=(DefaultTableModel)selltable.getModel();
            int selectrowindex=selltable.getSelectedRow();
                        String comrec=(tmodel.getValueAt(selectrowindex, 1).toString());
                        String addQuentity=(tmodel.getValueAt(selectrowindex, 4).toString());
                        String itmIncome=(tmodel.getValueAt(selectrowindex, 6).toString());
            String sq="SELECT receivestock.buying_price, receivestock.selling_price,stock.quentity, receivestock.description from receivestock join stock on receivestock.receive_no=stock.receive_no where receivestock.receive_no='"+comrec+"' and stock.receive_no='"+comrec+"'";        
             pst=conn.prepareStatement(sq);
             rs=pst.executeQuery();
             while(rs.next())
             {
             String cost=rs.getString("buying_price");
             String pri=rs.getString("selling_price");
             String sto=rs.getString("quentity");
             String des=rs.getString("description");             
             //cal cost
             Double que=Double.valueOf(addQuentity);
             Double iprice=Double.valueOf(cost);             
             Double icost=que*iprice;
             Double dueCost=Double.valueOf(lbltotalcost.getText());
             Double lCost=dueCost-icost;
             lbltotalcost.setText(lCost.toString());             
             //cal income            
             Double itmSelIncome=Double.valueOf(itmIncome);
             Double dueIncome=Double.valueOf(lbltotal.getText());             
             Double updateincome=dueIncome-itmSelIncome;
             lbltotal.setText(updateincome.toString());
             }

        } catch (Exception e) {
        }
    }
    
    private void txtquntityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtquntityKeyReleased
 
        int va=txtquntity.getText().length();
        if(va>0)
        {
            txtprice.setEditable(false);
            Double pr=Double.parseDouble(txtprice.getText());
            Double qua=Double.parseDouble(txtquntity.getText());
            Double amo=pr*qua;
            txtamount.setText(amo.toString());
            Double itemprice=Double.parseDouble(lblcost.getText());
            Double itemqua=Double.parseDouble(txtquntity.getText());
            Double subcost=itemprice*itemqua;
            lblitemcost.setText(subcost.toString());
        }
        else
        {
        txtamount.setText("");
        btnadd.setEnabled(false);
        }      
    }//GEN-LAST:event_txtquntityKeyReleased

    
    
    
    private void txtpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpriceActionPerformed

    private void selectItemItemNumber()
    {
        lorddisable();
        cleartest();
        itemcombox.removeAllItems();
        itemcombox.addItem("Select Item Name");
        combolord();
            try {
                String comselect=txtitmnum.getText();
                String sq="SELECT item_name  from receivestock where item_number= '"+comselect+"'";
                pst=conn.prepareStatement(sq);
                rs=pst.executeQuery();
                while(rs.next())
                {
                    String name=rs.getString("item_name");
                    itemcombox.setSelectedItem(name);                 
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,e);
            }
            if(itemcombox.getSelectedIndex()>0)
            {
            DefaultListModel dlm= new DefaultListModel();
            String sq="SELECT receive_no from stock where item_number='"+txtitmnum.getText()+"'";
            try {
                pst=conn.prepareStatement(sq);
                rs=pst.executeQuery();
                while(rs.next())
                {
                    String name=rs.getString("receive_no");                                    
                    dlm.addElement(name);                                     
                }
                lstreceive.setModel(dlm);
                txtreno.setText(dlm.getElementAt(0).toString());                            
            } catch (SQLException ex) {
                Logger.getLogger(Sale.class.getName()).log(Level.SEVERE, null, ex);
            }      
     itemLordToReNo();
     txtquntity.setText("");
     txtamount.setText("00.00");
            }
    }    
        
    private void itemcomboxPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_itemcomboxPopupMenuWillBecomeInvisible

       int select=itemcombox.getSelectedIndex();
       if(select>0)
       {
            try {
                String comselect=itemcombox.getSelectedItem().toString();
                String sq="SELECT item_number from receivestock where item_name='"+comselect+"'";
                pst=conn.prepareStatement(sq);
                rs=pst.executeQuery();
                while(rs.next())
                {
                    String name=rs.getString("item_number");
                    txtitmnum.setText(name);
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,e);
            }
            DefaultListModel dlm= new DefaultListModel();
            String sq="SELECT receive_no from stock where item_number='"+txtitmnum.getText()+"'";
            try {
                pst=conn.prepareStatement(sq);
                rs=pst.executeQuery();
                while(rs.next())
                {
                    String name=rs.getString("receive_no");                                    
                    dlm.addElement(name);                                     
                }
                lstreceive.setModel(dlm);
                txtreno.setText(dlm.getElementAt(0).toString());                              
            } catch (SQLException ex) {
                Logger.getLogger(Sale.class.getName()).log(Level.SEVERE, null, ex);
            }      
     itemLordToReNo();
     txtquntity.setText("");
     txtamount.setText("00.00");
    }//GEN-LAST:event_itemcomboxPopupMenuWillBecomeInvisible

       else{
       clear();
       }   
    }
        
    private void itemcomboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemcomboxActionPerformed

    }//GEN-LAST:event_itemcomboxActionPerformed

    private void txtstockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtstockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtstockActionPerformed

    private void txtquntityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtquntityKeyTyped
       
        char c=evt.getKeyChar();
        if(Character.isLetter(c)&& !evt.isAltDown())
        {
        evt.consume();         
        }
       btnadd.setEnabled(true);       
    }//GEN-LAST:event_txtquntityKeyTyped

    private void selltableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selltableMouseClicked
       btnvoid.setEnabled(true);
    }//GEN-LAST:event_selltableMouseClicked

    private void lstreceiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstreceiveMouseClicked
       if(lstreceive.getLastVisibleIndex()>0)
       {
        String selectnum=lstreceive.getSelectedValue();
       txtreno.setText(selectnum);
       itemLordToReNo();
       }
    }//GEN-LAST:event_lstreceiveMouseClicked

    private void txtrenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrenoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrenoActionPerformed

    private void txtquntityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtquntityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtquntityActionPerformed

    private void txtquntityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtquntityKeyPressed
      // txtamount.setText("");
       
      
    }//GEN-LAST:event_txtquntityKeyPressed

    private void txtitmnumKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtitmnumKeyReleased
       selectItemItemNumber();
       btnprosess.setEnabled(true);       
    }//GEN-LAST:event_txtitmnumKeyReleased

    private void btnaddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnaddMouseClicked
        String invo=txtinvoice.getText();
        String reno=txtreno.getText();
        String itnum=txtitmnum.getText();
        String itname=itemcombox.getSelectedItem().toString();
        String qua=txtquntity.getText();
        String pri=txtprice.getText();
        String amo=txtamount.getText();
                try {
                String q= "INSERT INTO sells(sin,receive_no, item_number, item_name, quentity, price, amount) VALUES ('"+invo+"','"+reno+"','"+itnum+"','"+itname+"','"+qua+"','"+pri+"','"+amo+"')";
                pst=conn.prepareStatement(q);
                pst.execute(); 
                    } 
                catch (Exception e) 
                {
                        JOptionPane.showMessageDialog(rootPane,e);                    
                } 
        caltotal();
        saletablelord();
        stockupdate();
        sellcost();
        clear();
        lorddisable();
        btnprosess.setEnabled(true);
        itemcombox.removeAllItems();
        itemcombox.addItem("Select Item Name");
        combolord();  
    }//GEN-LAST:event_btnaddMouseClicked

    private void btnvoidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnvoidMouseClicked
         DefaultTableModel tmodel=(DefaultTableModel)selltable.getModel();
        int selectrowindex=selltable.getSelectedRow();
        String que=(tmodel.getValueAt(selectrowindex, 4).toString());
        String reno=(tmodel.getValueAt(selectrowindex, 1).toString());
        String itno=(tmodel.getValueAt(selectrowindex, 2).toString());
        
        try {
              String squpdate = "UPDATE stock SET quentity=quentity +'"+que+"' WHERE receive_no='"+reno+"' and item_number='"+itno+"'";
              pst=conn.prepareStatement(squpdate);
              pst.execute();  
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,e);              
            }
        saleVoid();
        sellvoidUpdate();
        saletablelord();
        btnvoid.setEnabled(false); 
    }//GEN-LAST:event_btnvoidMouseClicked

    private void btnprosessMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnprosessMouseClicked
       sino=txtinvoice.getText();
        
        if(selltable.getRowCount()>0)
        {
        cashPay py=new cashPay();
        py.setVisible(true);
        
        salecost=lbltotalcost.getText();
        saleincome=lbltotal.getText(); 
        this.dispose();
        Sale sa=new Sale();
        
        }
        else
        {
        JOptionPane.showMessageDialog(rootPane, "Add Item To continue Process");
        }
    }//GEN-LAST:event_btnprosessMouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel14MouseClicked
    
    private void sellcost()
    {
        Double itemcost=Double.parseDouble(lblitemcost.getText());    
        Double costbal=Double.parseDouble(lbltotalcost.getText());
        Double finalcost=costbal+itemcost;
        lbltotalcost.setText(finalcost.toString());
        JOptionPane.showMessageDialog(rootPane,finalcost);  
    }
    
    private void stockupdate()
    {
     try {
              String squpdate = "UPDATE stock SET quentity=quentity -'"+txtquntity.getText()+"' WHERE receive_no='"+txtreno.getText()+"' and item_number='"+txtitmnum.getText()+"'";
              pst=conn.prepareStatement(squpdate);
                pst.execute();                  
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,e);              
            }
    
    }
    
    
    private void caltotal()
    {
    Double total=Double.parseDouble(lbltotal.getText());    
    Double amou=Double.parseDouble(txtamount.getText());
    Double finaltotal=total+amou;
    lbltotal.setText(finaltotal.toString());
        
    }
        
    private  void saletablelord()
    {
         try {
            String sql="SELECT `sin`,`receive_no`, `item_number`, `item_name`, `quentity`, `price`, `amount` FROM `sells` where sin='"+txtinvoice.getText()+"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            selltable.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));            
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(rootPane, e);
        }
    }
    
    private void autosellId()
    {
        try {
            String sql="SELECT sin FROM sells ORDER BY sin DESC LIMIT 1";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
           if(rs.next())
           {
               String rnno=rs.getString("sin");
               int co=rnno.length();
               String txt= rnno.substring(0, 2);
               String num=rnno.substring(2, co);
               int n=Integer.parseInt(num);
               n++;
               String snum=Integer.toString(n);
               String ftxt=txt+snum;
               txtinvoice.setText(ftxt);            
           }
           else
           {
               txtinvoice.setText("SI1000");
           }                                       
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }       
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnadd;
    private javax.swing.JPanel btnprosess;
    private javax.swing.JPanel btnvoid;
    private javax.swing.JComboBox<String> itemcombox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblcost;
    private javax.swing.JLabel lblitemcost;
    private javax.swing.JLabel lbltotal;
    private javax.swing.JLabel lbltotalcost;
    private javax.swing.JList<String> lstreceive;
    private javax.swing.JTable selltable;
    private javax.swing.JTextField txtamount;
    private javax.swing.JTextField txtavailable;
    private javax.swing.JTextField txtdescription;
    private javax.swing.JTextField txtinvoice;
    private javax.swing.JTextField txtitmnum;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtquntity;
    private javax.swing.JTextField txtreno;
    private javax.swing.JTextField txtstock;
    // End of variables declaration//GEN-END:variables
}
